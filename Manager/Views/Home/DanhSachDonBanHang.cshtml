@model List<Manager.Models.DonHang>

@{
    ViewBag.Title = "Danh sách đơn bán hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var donHangSapXep = Model.OrderByDescending(d => d.NgayTao).ToList();
    var pageSize = 10; // Số đơn hàng trên mỗi trang
    var currentPage = Request.QueryString["page"] != null ? int.Parse(Request.QueryString["page"]) : 1;
    var totalItems = donHangSapXep.Count;
    var totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
    var itemsToShow = donHangSapXep.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<div class="container py-4">
    <h3 class="fw-bold mb-3">Danh sách đơn bán hàng</h3>

    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb bg-info bg-opacity-25 px-3 py-2 rounded">
            <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
            <li class="breadcrumb-item active" aria-current="page">Đơn bán hàng</li>
        </ol>
    </nav>

    <!-- Action Bar -->
    <div class="d-flex flex-wrap align-items-center mb-3 gap-2">
        
        <div class="d-flex flex-grow-1 gap-2">
            <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm theo mã đơn hàng hoặc mã khách hàng..." />
            <button class="btn btn-primary" id="btnSearch"><i class="bi bi-search"></i> Tìm</button>
        </div>
        <button id="btnShowFilter" class="btn btn-outline-secondary">
            <i class="bi bi-funnel"></i> Bộ lọc
        </button>
        <button id="btnXoaNhieu" class="btn btn-danger d-none" onclick="xoaNhieu()">
            <i class="bi bi-trash3"></i> Xóa đã chọn
        </button>
    </div>

    <!-- Bộ lọc -->
    <div class="card mb-3 d-none" id="filterCard">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <span class="fw-semibold"><i class="bi bi-funnel"></i> Bộ lọc</span>
                <button class="btn btn-sm btn-link" type="button" id="btnHideFilter">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <!-- Lọc theo khoảng thời gian -->
                <div class="col-md-6">
                    <div class="row g-2">
                        <div class="col-6">
                            <label class="form-label">Từ ngày</label>
                            <input type="date" class="form-control" id="filterFromDate">
                        </div>
                        <div class="col-6">
                            <label class="form-label">Đến ngày</label>
                            <input type="date" class="form-control" id="filterToDate">
                        </div>
                    </div>
                </div>
                
                <!-- Lọc theo giá trị đơn hàng -->
                <div class="col-md-6">
                    <div class="row g-2">
                        <div class="col-6">
                            <label class="form-label">Giá trị từ</label>
                            <input type="number" class="form-control" id="filterMinValue" placeholder="VND">
                        </div>
                        <div class="col-6">
                            <label class="form-label">Đến</label>
                            <input type="number" class="form-control" id="filterMaxValue" placeholder="VND">
                        </div>
                    </div>
                </div>
                
                <!-- Lọc theo trạng thái đơn hàng -->
                <div class="col-md-6">
                    <label class="form-label">Trạng thái đơn hàng</label>
                    <select class="form-select" id="filterOrderStatus">
                        <option value="">Tất cả</option>
                        <option value="DangXuLy">Đang xử lý</option>
                        <option value="DangGiao">Đang giao</option>
                        <option value="HoanThanh">Hoàn thành</option>
                        <option value="DaHuy">Đã hủy</option>
                    </select>
                </div>
                
                <!-- Lọc theo trạng thái thanh toán -->
                <div class="col-md-6">
                    <label class="form-label">Trạng thái thanh toán</label>
                    <select class="form-select" id="filterPaymentStatus">
                        <option value="">Tất cả</option>
                        <option value="ChoThanhToan">Chờ thanh toán</option>
                        <option value="DaThanhToan">Đã thanh toán</option>
                        <option value="DaHuy">Đã hủy</option>
                    </select>
                </div>
                
                <!-- Nút áp dụng và xóa bộ lọc -->
                <div class="col-12 text-end">
                    <button class="btn btn-secondary me-2" id="btnResetFilter"><i class="bi bi-x-circle"></i> Xóa bộ lọc</button>
                    <button class="btn btn-primary" id="btnApplyFilter"><i class="bi bi-funnel"></i> Áp dụng</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Table -->
    <div class="table-responsive">
        <table class="table table-bordered align-middle" id="orderTable">
            <thead class="table-light text-center">
                <tr>
                    <th style="width: 50px;">
                        <input type="checkbox" id="checkAll" />
                    </th>
                    <th>Mã Đơn Hàng</th>
                    <th>Mã Khách Hàng</th>
                    <th>Tổng Tiền</th>
                    <th>Trạng Thái Đơn Hàng</th>
                    <th>Trạng Thái Thanh Toán</th>
                    <th>Ngày Tạo</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < donHangSapXep.Count; i++)
                {
                    var item = donHangSapXep[i];
                    <tr data-index="@i" style="display: @(i >= (currentPage - 1) * pageSize && i < currentPage * pageSize ? "" : "none")">
                        <td class="text-center">
                            <input type="checkbox" class="check-item" value="@item.MaDonHang" />
                        </td>
                        <td>@item.MaDonHang</td>
                        <td>@item.MaKhachHang</td>
                        <td class="text-end">@((item.TongTien ?? 0 ).ToString("N0")) ₫</td>
                        <td class="text-center">
                            @{
                                var badgeClass = "";
                                var trangThaiText = "";
                                switch (item.TrangThaiDonHang)
                                {
                                    case "DangXuLy":
                                        badgeClass = "bg-warning";
                                        trangThaiText = "Đang xử lý";
                                        break;
                                    case "DangGiao":
                                        badgeClass = "bg-info";
                                        trangThaiText = "Đang giao";
                                        break;
                                    case "HoanThanh":
                                        badgeClass = "bg-success";
                                        trangThaiText = "Hoàn thành";
                                        break;
                                    case "DaHuy":
                                        badgeClass = "bg-danger";
                                        trangThaiText = "Đã hủy";
                                        break;
                                    default:
                                        trangThaiText = item.TrangThaiDonHang;
                                        break;
                                }
                            }
                            <span class="badge @badgeClass">@trangThaiText</span>
                        </td>
                        <td class="text-center">
                            @{
                                var badgePaymentClass = "";
                                var trangThaiThanhToanText = "";
                                switch (item.TrangThaiThanhToan)
                                {
                                    case "ChoThanhToan":
                                        badgePaymentClass = "bg-warning";
                                        trangThaiThanhToanText = "Chờ thanh toán";
                                        break;
                                    case "DaThanhToan":
                                        badgePaymentClass = "bg-success";
                                        trangThaiThanhToanText = "Đã thanh toán";
                                        break;
                                    case "DaHuy":
                                        badgePaymentClass = "bg-danger";
                                        trangThaiThanhToanText = "Đã hủy";
                                        break;
                                    default:
                                        trangThaiThanhToanText = item.TrangThaiThanhToan;
                                        break;
                                }
                            }
                            <span class="badge @badgePaymentClass">@trangThaiThanhToanText</span>
                        </td>
                        <td>@item.NgayTao.Value.ToString("dd/MM/yyyy HH:mm")</td>
                        <td class="text-center">
                            <a href="@Url.Action("ChiTietDonBanHang", new { id = item.MaDonHang })" class="btn btn-sm btn-info">
                                <i class="bi bi-eye"></i>
                            </a>
                            <a href="#" class="btn btn-sm btn-primary btn-edit" data-id="@item.MaDonHang" data-bs-toggle="modal" data-bs-target="#editOrderModal">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a href="#" class="btn btn-sm btn-warning btn-delete" data-id="@item.MaDonHang" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">
                                <i class="bi bi-trash3"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Phân trang -->
    <nav aria-label="Page navigation" class="mt-3">
        <ul class="pagination justify-content-center">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("DanhSachDonBanHang", new { page = 1 })" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("DanhSachDonBanHang", new { page = currentPage - 1 })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            
            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("DanhSachDonBanHang", new { page = i })">@i</a>
                </li>
            }
            
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("DanhSachDonBanHang", new { page = currentPage + 1 })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("DanhSachDonBanHang", new { page = totalPages })" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>

    <!-- Modal Xác nhận xóa -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p id="deleteMessage">Bạn có chắc chắn muốn xóa đơn hàng này?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Xóa</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal thành công -->
    <div class="modal fade" id="successModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">Thành công</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body" id="successMessage">
                    Thao tác thành công!
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Chỉnh sửa đơn hàng -->
    <div class="modal fade" id="editOrderModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Cập nhật đơn hàng</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editOrderForm">
                        <input type="hidden" id="editMaDonHang" />
                        
                        <div class="mb-3">
                            <label for="editTrangThaiDonHang" class="form-label">Trạng thái đơn hàng</label>
                            <select class="form-select" id="editTrangThaiDonHang">
                                <option value="DangXuLy">Đang xử lý</option>
                                <option value="DangGiao">Đang giao</option>
                                <option value="HoanThanh">Hoàn thành</option>
                                <option value="DaHuy">Đã hủy</option>
                            </select>
                        </div>
                        
                        <div class="mb-3">
                            <label for="editTrangThaiThanhToan" class="form-label">Trạng thái thanh toán</label>
                            <select class="form-select" id="editTrangThaiThanhToan">
                                <option value="ChoThanhToan">Chờ thanh toán</option>
                                <option value="DaThanhToan">Đã thanh toán</option>
                                <option value="DaHuy">Đã hủy</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="updateOrder">Lưu</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            // Xử lý hiển thị/ẩn bộ lọc
            $('#btnShowFilter').click(function() {
                $('#filterCard').removeClass('d-none');
                $(this).addClass('d-none');
            });
            
            $('#btnHideFilter').click(function() {
                $('#filterCard').addClass('d-none');
                $('#btnShowFilter').removeClass('d-none');
            });
            
            // Xử lý checkbox "Chọn tất cả"
            $('#checkAll').change(function() {
                $('.check-item').prop('checked', $(this).prop('checked'));
                toggleDeleteButton();
            });

            // Xử lý khi checkbox đơn lẻ thay đổi
            $('.check-item').change(function() {
                toggleDeleteButton();
                // Nếu tất cả checkbox con được chọn, checkbox "Chọn tất cả" cũng được chọn
                $('#checkAll').prop('checked', $('.check-item:checked').length === $('.check-item').length);
            });

            // Hàm hiển thị/ẩn nút xóa
            function toggleDeleteButton() {
                if($('.check-item:checked').length > 0) {
                    $('#btnXoaNhieu').removeClass('d-none');
                } else {
                    $('#btnXoaNhieu').addClass('d-none');
                }
            }

            // Xử lý tìm kiếm
            $('#btnSearch').click(function() {
                searchOrders();
            });
            
            $('#searchInput').on('keypress', function(e) {
                if(e.which === 13) {
                    searchOrders();
                }
            });

            function searchOrders() {
                var searchText = $('#searchInput').val().toLowerCase();
                filterOrders();
            }

            // Xử lý bộ lọc
            $('#btnApplyFilter').click(function() {
                filterOrders();
            });

            $('#btnResetFilter').click(function() {
                // Reset các trường lọc
                $('#filterFromDate').val('');
                $('#filterToDate').val('');
                $('#filterMinValue').val('');
                $('#filterMaxValue').val('');
                $('#filterOrderStatus').val('');
                $('#filterPaymentStatus').val('');
                // Hiển thị lại tất cả đơn hàng
                $('#orderTable tbody tr').show();
            });

            function filterOrders() {
                var searchText = $('#searchInput').val().toLowerCase();
                var fromDate = $('#filterFromDate').val() ? new Date($('#filterFromDate').val()) : null;
                var toDate = $('#filterToDate').val() ? new Date($('#filterToDate').val()) : null;
                var minValue = $('#filterMinValue').val() ? parseFloat($('#filterMinValue').val()) : null;
                var maxValue = $('#filterMaxValue').val() ? parseFloat($('#filterMaxValue').val()) : null;
                var orderStatus = $('#filterOrderStatus').val();
                var paymentStatus = $('#filterPaymentStatus').val();

                var hasSearch = $('#searchInput').val().length > 0
                    || $('#filterFromDate').val().length > 0
                    || $('#filterToDate').val().length > 0
                    || $('#filterMinValue').val().length > 0
                    || $('#filterMaxValue').val().length > 0
                    || $('#filterOrderStatus').val().length > 0
                    || $('#filterPaymentStatus').val().length > 0;

                $('#orderTable tbody tr').each(function() {
                    var show = true;
                    
                    // Lọc theo mã đơn hàng hoặc mã khách hàng
                    if (searchText) {
                        var maDonHang = $(this).find('td:eq(1)').text().toLowerCase();
                        var maKhachHang = $(this).find('td:eq(2)').text().toLowerCase();
                        
                        if (!(maDonHang.includes(searchText) || maKhachHang.includes(searchText))) {
                            show = false;
                        }
                    }
                    
                    // Lọc theo khoảng thời gian
                    if (show && (fromDate || toDate)) {
                        var dateText = $(this).find('td:eq(6)').text().trim();
                        var parts = dateText.split(/[\s\/\:]/);
                        var orderDate = new Date(parts[2], parts[1]-1, parts[0], parts[3], parts[4]);
                        
                        if (fromDate && orderDate < fromDate) {
                            show = false;
                        }
                        
                        if (toDate) {
                            // Thêm 1 ngày vào toDate để bao gồm cả ngày kết thúc
                            var adjustedToDate = new Date(toDate);
                            adjustedToDate.setDate(adjustedToDate.getDate() + 1);
                            if (orderDate > adjustedToDate) {
                                show = false;
                            }
                        }
                    }
                    
                    // Lọc theo giá trị đơn hàng
                    if (show && (minValue || maxValue)) {
                        var valueText = $(this).find('td:eq(3)').text().trim();
                        var value = parseFloat(valueText.replace(/[^\d]/g, ''));
                        
                        if (minValue && value < minValue) {
                            show = false;
                        }
                        
                        if (maxValue && value > maxValue) {
                            show = false;
                        }
                    }
                    
                    // Lọc theo trạng thái đơn hàng
                    if (show && orderStatus) {
                        var statusElement = $(this).find('td:eq(4) .badge');
                        var actualStatus = '';
                        
                        if (statusElement.text() === 'Đang xử lý') actualStatus = 'DangXuLy';
                        else if (statusElement.text() === 'Đang giao') actualStatus = 'DangGiao';
                        else if (statusElement.text() === 'Hoàn thành') actualStatus = 'HoanThanh';
                        else if (statusElement.text() === 'Đã hủy') actualStatus = 'DaHuy';
                        
                        if (actualStatus !== orderStatus) {
                            show = false;
                        }
                    }
                    
                    // Lọc theo trạng thái thanh toán
                    if (show && paymentStatus) {
                        var paymentElement = $(this).find('td:eq(5) .badge');
                        var actualPaymentStatus = '';
                        
                        if (paymentElement.text() === 'Chờ thanh toán') actualPaymentStatus = 'ChoThanhToan';
                        else if (paymentElement.text() === 'Đã thanh toán') actualPaymentStatus = 'DaThanhToan';
                        else if (paymentElement.text() === 'Đã hủy') actualPaymentStatus = 'DaHuy';
                        
                        if (actualPaymentStatus !== paymentStatus) {
                            show = false;
                        }
                    }
                    
                    // Hiển thị hoặc ẩn dòng
                    if (show) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });

                if (hasSearch) {
                    $('.pagination').hide();
                } else {
                    $('.pagination').show();
                    // Ẩn/hiện lại các dòng theo trang hiện tại
                    $('#orderTable tbody tr').each(function(index) {
                        if(index >= (currentPage - 1) * pageSize && index < currentPage * pageSize) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    });
                }
            }

            // Xử lý khi nhấn nút sửa
            $('.btn-edit').click(function() {
                var maDonHang = $(this).data('id');
                
                $.ajax({
                    url: '@Url.Action("LayThongTinDonHang", "Home")',
                    type: 'GET',
                    data: { id: maDonHang },
                    success: function(response) {
                        if (response) {
                            $('#editMaDonHang').val(response.MaDonHang);
                            $('#editTrangThaiDonHang').val(response.TrangThaiDonHang);
                            $('#editTrangThaiThanhToan').val(response.TrangThaiThanhToan);
                        } else {
                            alert('Không tìm thấy thông tin đơn hàng');
                        }
                    },
                    error: function() {
                        alert('Lỗi khi lấy thông tin đơn hàng');
                    }
                });
            });

            // Xử lý khi nhấn nút Lưu trong modal sửa
            $('#updateOrder').click(function() {
                var data = {
                    MaDonHang: $('#editMaDonHang').val(),
                    TrangThaiDonHang: $('#editTrangThaiDonHang').val(),
                    TrangThaiThanhToan: $('#editTrangThaiThanhToan').val()
                };
                
                $.ajax({
                    url: '@Url.Action("CapNhatDonHang", "Home")',
                    type: 'POST',
                    data: data,
                    success: function(response) {
                        $('#editOrderModal').modal('hide');
                        if (response.success) {
                            $('#successMessage').text('Cập nhật đơn hàng thành công!');
                            $('#successModal').modal('show');
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                        } else {
                            alert(response.message || 'Cập nhật đơn hàng thất bại');
                        }
                    },
                    error: function() {
                        alert('Lỗi khi gọi server');
                    }
                });
            });

            // Xử lý khi nhấn nút xóa
            $('.btn-delete').click(function() {
                var maDonHang = $(this).data('id');
                
                $('#confirmDelete').off('click').on('click', function() {
                    $.ajax({
                        url: '@Url.Action("XoaDonHang", "Home")',
                        type: 'POST',
                        data: { id: maDonHang },
                        success: function(response) {
                            $('#confirmDeleteModal').modal('hide');
                            if (response.success) {
                                $('#successMessage').text('Xóa đơn hàng thành công!');
                                $('#successModal').modal('show');
                                setTimeout(function() {
                                    location.reload();
                                }, 1500);
                            } else {
                                alert(response.message || 'Xóa đơn hàng thất bại');
                            }
                        },
                        error: function() {
                            alert('Lỗi khi gọi server');
                        }
                    });
                });
            });
        });

        // Hàm xóa nhiều đơn hàng
        function xoaNhieu() {
            var selectedIds = [];
            $('.check-item:checked').each(function() {
                selectedIds.push($(this).val());
            });

            if(selectedIds.length === 0) {
                alert('Vui lòng chọn ít nhất một đơn hàng để xóa!');
                return;
            }

            $('#deleteMessage').text("Bạn có chắc chắn muốn xóa " + selectedIds.length + " đơn hàng đã chọn?");
            $('#confirmDeleteModal').modal('show');

            $('#confirmDelete').off('click').on('click', function() {
                $.ajax({
                    url: '@Url.Action("XoaNhieuDonHang", "Home")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ ids: selectedIds }),
                    success: function(response) {
                        $('#confirmDeleteModal').modal('hide');
                        if(response.success) {
                            $('#successMessage').text('Xóa đơn hàng thành công!');
                            $('#successModal').modal('show');
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                        } else {
                            alert(response.message || "Xóa thất bại");
                        }
                    },
                    error: function() {
                        alert("Lỗi khi gọi server.");
                    }
                });
            });
        }
    </script>
</div>
